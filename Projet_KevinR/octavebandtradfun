def octavebandtradfun(minfreq, maxfreq, type):
    # Les fréquences exactes des bandes d'octave, tiers d'octave, sixième d'octave
    # et douzième d'octave sont stockées dans ces tableaux.
    # Toutes les spécifications sont basées sur la base 10, conformément à la norme IEC 61260-1:2014.

    fullband = []

    if type == 'one':
        fullband = [1, 2, 4, 8, 16, 31.5, 63, 125, 250, 500, 1000, 2000,
                    4000, 8000, 16000]
    elif type == 'third':
        fullband = [16, 20, 25, 31.5, 40, 50, 63, 80, 100, 125, 160, 200,
                    250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000,
                    2500, 3150, 4000, 5000, 6300, 8000, 10000, 12500, 16000, 20000]
    elif type == 'sixth':
        fullband = [0.75, 0.84, 0.94, 1.06, 1.19, 1.33, 1.50, 1.68, 1.88,
                    2.11, 2.37, 2.66, 2.99, 3.35, 3.76, 4.22, 4.73, 5.3, 6,
                    6.7, 7.5, 8.4, 9.4, 10.6, 11.9, 13.3, 15, 16.8, 18.8, 21.1,
                    23.7, 26.6, 29.9, 33.5, 37.6, 42.2, 47.3, 53, 60, 67, 75,
                    84, 94, 106, 119, 133, 150, 168, 188, 211, 237, 266, 299,
                    335, 376, 422, 473, 530, 600, 670, 750, 840, 940, 1060,
                    1190, 1330, 1500, 1680, 1880, 2110, 2370, 2660, 2990, 3350,
                    3760, 4220, 4730, 5300, 6000, 6700, 7500, 8400, 9400,
                    10600, 11900, 13300, 15000, 16800, 18800, 21100, 23700]
    elif type == 'twelth':
        fullband = [0.73, 0.77, 0.82, 0.87, 0.92, 0.97, 1.03, 1.09, 1.15,
                    1.22, 1.30, 1.37, 1.45, 1.54, 1.63, 1.73, 1.83, 1.94, 2.05,
                    2.18, 2.30, 2.44, 2.59, 2.74, 2.90, 3.07, 3.25, 3.45, 3.65,
                    3.87, 4.10, 4.34, 4.60, 4.87, 5.20, 5.50, 5.80, 6.10, 6.50,
                    6.90, 7.30, 7.70, 8.20, 8.70, 9.20, 9.70, 10.3, 10.9, 11.5,
                    12.2, 13, 13.7, 14.5, 15.4, 16.3, 17.3, 18.3, 19.4, 20.5,
                    21.8, 23, 24.4, 25.9, 27.4, 29, 30.7, 32.5, 34.5, 36.5, 38.7,
                    41, 43.4, 46, 48.7, 52, 55, 58, 61, 65, 69, 73, 77, 82, 87,
                    92, 97, 103, 109, 115, 122, 130, 137, 145, 154, 163, 173,
                    183, 194, 205, 218, 230, 244, 259, 274, 290, 307, 325, 345,
                    365, 387, 410, 434, 460, 487, 520, 550, 580, 610, 650, 690,
                    730, 770, 820, 870, 920, 970, 1030, 1090, 1150, 1220, 1300,
                    1370, 1450, 1540, 1630, 1730, 1830, 1940, 2050, 2180, 2300,
                    2440, 2590, 2740, 2900, 3070, 3250, 3450, 3650, 3870, 4100,
                    4340, 4600, 4870, 5200, 5500, 5800, 6100, 6500, 6900, 7300,
                    7700, 8200, 8700, 9200, 9700, 10300, 10900, 11500, 12200,
                    13000, 13700, 14500, 15400, 16300, 17300, 18300, 19400, 20500,
                    21800, 23000]

    idmin = min(range(len(fullband)), key=lambda i: abs(fullband[i] - minfreq))
    if fullband[idmin] < minfreq:
        idmin = idmin + 1

    idmax = min(range(len(fullband)), key=lambda i: abs(fullband[i] - maxfreq))
    if fullband[idmax] > maxfreq:
        idmax = idmax - 1

    freq = fullband[idmin:idmax+1]
    return freq
